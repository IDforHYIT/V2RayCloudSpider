# This configuration file was automatically generated by Gitpod.
# Please adjust to your needs (see https://www.gitpod.io/docs/config-gitpod-file)
# and commit this file to your remote git repository to share the goodness with others.

tasks:
  - name: Terminal envs_init
    before: sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    command: |
      sudo apt-get update -y
      python3 -m pip install --upgrade pip
      pip install -r requirements.txt
      sudo apt-get update
      gp sync-done envs_init
      date
      gp sync-await envs_init
      wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      sudo apt install ./google-chrome-stable_current_amd64.deb -y
      rm ./google-chrome-stable_current*
      sudo apt install ffmpeg -y
      gp sync-done envs_apt
      ffmpeg -version
      google-chrome --version
  - name: Terminal envs_redis
    command: |
      gp sync-await envs_apt
      sudo mkdir -vp /workspace/V2RayCloudSpider/src/database/redis
      sudo chmod -R 777 /workspace/V2RayCloudSpider/src/database
      docker run -itd -v /workspace/V2RayCloudSpider/src/database/redis:/data --name redis-test -p 6379:6379 redis
      docker start redis-test
      docker ps -a
      sudo cp /workspace/V2RayCloudSpider/src/config-sample.yaml /workspace/V2RayCloudSpider/src/config.yaml
      sudo chmod 777 /workspace/V2RayCloudSpider/src/config.yaml
      gp sync-done envs_redis
      docker ps -a
      docker exec -it redis-test /bin/bash
      redis-cli
  - name: Terminal envs_redis-tools
    command: |
      gp sync-await envs_redis
      sleep 180
      cd /workspace/V2RayCloudSpider/src/database/redis
      pip install rdbtools python-lzf
      rdb --command json dump.rdb > data_all.json
      rdb --command justkeyvals --key "v2rss:subscribe:v2ray" dump.rdb > data_subscribe.txt
      rdb --command justkeyvals --key "v2rss:detach" dump.rdb > data_used.txt
      

  # - name: Terminal run init
  #   before: python3 src/main.py install
  #   init: python3 src/main.py install
  #   command: python3 src/main.py ping
  # - name: Terminal run test
  #   before: python3 src/main.py ping
  #   init: |
  #     python3 src/main.py entropy --update
  #     python3 src/main.py entropy --cap=27
  #     python3 src/main.py entropy --check
  #   command: python3 examples/atomic_go.py


  # ###### BEGIN ###### #

  # # V2RSS 脚手架指令  https://blog.echosec.top/v2rss-docs/zh/docs/player/cli/overview/

  # ## 基础指令
  # ### scaffold ping     ---   测试 Redis 数据库连接
  - name: Scaffold Ping
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await envs_redis
      python3 main.py ping
  # ✅### scaffold install  ---   在 Ubuntu 中构建基础运行环境
  - name: Scaffold Install
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await envs_redis
      python3 main.py install
      python3 main.py install
      gp sync-done Scaffold_Install

  # ## 订阅管理
  # ### scaffold pool     ---   订阅池的命令行管理工具。功能包括：剔除 alive_pool 中的失效订阅或过期订阅，输出订阅池状态等。 ( localhost:22333/api/v2rss/status )
  - name: Scaffold Pool
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await Scaffold_Install
      sleep 60
      gp sync-await Scaffold_Server
      python3 main.py pool
      python main.py pool --decouple
      python main.py pool --overdue

  # ## 系统任务
  # ### scaffold deploy   ---   部署定时任务节点
  - name: Scaffold Deploy
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await Scaffold_Install
      python main.py entropy --update
      python main.py deploy --collector --decoupler
  # ### scaffold synergy  ---   部署协同工作节点
  - name: Scaffold Synergy
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await Scaffold_Install
      python main.py synergy
  # ✅### scaffold server   ---   部署 PRODUCTION 接口服务器
  - name: Scaffold Server
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await Scaffold_Install
      python3 main.py server --host=0.0.0.0 --port=22333 --debug --fast

  # ### scaffold entropy  ---   采集队列的命令行管理工具。功能包括：更新待办任务、更新采集队列容量，检查待办任务心跳，输出采集队列摘要信息。
  - name: Scaffold Entropy
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await Scaffold_Install
      sleep 15
      gp sync-done Scaffold_Server
      python3 main.py entropy
      python main.py entropy --remote
      python main.py entropy --cap=27
      python main.py entropy --update
      python main.py entropy --check

  # ## 高级指令
  # ### scaffold mining   ---   采集、清洗、分类、存储暴露在公网上的 SSPanel-Uim 站点
  - name: Scaffold Mining
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await Scaffold_Server
      python main.py mining --power=64
      python main.py mining --classifier --source=remote --batch=7
      python main.py mining --collector
  # ✅### scaffold spawn    ---   释放所有本机采集实例，基于 gevent 并发执行
  - name: Scaffold Spawn
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await Scaffold_Server
      python main.py spawn --power=64 --remote

  # ## 实验功能
  # ### scaffold ash      ---   通过设定的 threshold 审查订阅池，清洗出各类订阅中的优质节点，重新排列组合生成可被 Clash 吸收的规则的 config.yaml ；自动打开 Clash 导入配置文件。
  - name: Scaffold Ash
    before: cd /workspace/V2RayCloudSpider/src
    command: |
      gp sync-await Scaffold_Server
      python main.py ash

  # ###### END ###### #


  - name: Terminal curl server
    command: |
      gp sync-await Scaffold_Server
      sleep 60
      curl localhost:22333/api/v2rss/status
      curl localhost:22333/api/v2rss/get/v2ray
      curl localhost:22333/api/v2rss/get_subs/v1
      curl localhost:22333/api/v2rss/get_subs/v2

ports:
  - port: 22333
    onOpen: open-browser
    visibility: public
  - port: 6379
    onOpen: ignore
    visibility: public
